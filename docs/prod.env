{
  PORT: '',
  API_VERSION:  '',
  SCHEDULE_INTERVAL:  '',
  LOG_LEVEL: '',
  CHALLENGE_TYPE_API_URL:  '',
  CHALLENGE_TIMELINE_API_URL:  '',
  CREATED_DATE_BEGIN:  '',

  INFORMIX: {
    SERVER:  '',
    DATABASE: '',
    HOST:  '',
    PROTOCOL:  '',
    PORT: '',
    DB_LOCALE:  '',
    USER: '',
    PASSWORD: '',
    POOL_MAX_SIZE:  ''
  },

  AMAZON: {
    // Uncomment for local deployment
    // AWS_ACCESS_KEY_ID: process.env.AWS_ACCESS_KEY_ID || 'FAKE_ACCESS_KEY', // aws access key
    // AWS_SECRET_ACCESS_KEY: process.env.AWS_SECRET_ACCESS_KEY || 'FAKE_SECRET_ACCESS_KEY', // aws secret key
    AWS_REGION:  '',
    IS_LOCAL_DB:  '', // true or uninitialize if we use local instance
    DYNAMODB_URL:  '', // just for local development
    S3_API_VERSION:  ''
  },

  ES: {
    // above AWS_REGION is used if we use AWS ES
    HOST: '',
    API_VERSION:  '',
    CHALLENGE_ES_INDEX:  '',
    RESOURCE_ES_INDEX:  '',
    RESOURCE_ROLE_ES_INDEX: '',
    CHALLENGE_TYPE_ES_INDEX: '',
    CHALLENGE_ES_TYPE:  '',
    RESOURCE_ES_TYPE: '',
    RESOURCE_ROLE_ES_TYPE:  '',
    CHALLENGE_TYPE_ES_TYPE: '',
    ES_REFRESH:  ''
  },

  // map phase_type_id to name
  PHASE_NAME_MAPPINGS: {
    1: 'Registration',
    2: 'Submission',
    4: 'Review',
    5: 'Apeal',
    6: 'Apeal Response',
    15: 'Checkpoint Submission'
  },
  // Resource role to be included in migration
  RESOURCE_ROLE: ['Submitter', 'Reviewer', 'Copilot', 'Manager', 'Observer', 'Iterative Reviewer', 'Post-Mortem Reviewer'],
  BATCH_SIZE:  '',
  ERROR_LOG_FILENAME: '',
  LOG_FILENAME:  ''
}
